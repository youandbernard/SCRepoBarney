// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SnomedApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AsyncConceptChangeBatch
    {
        /// <summary>
        /// Initializes a new instance of the AsyncConceptChangeBatch class.
        /// </summary>
        public AsyncConceptChangeBatch()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AsyncConceptChangeBatch class.
        /// </summary>
        /// <param name="status">Possible values include: 'RUNNING',
        /// 'COMPLETED', 'FAILED'</param>
        public AsyncConceptChangeBatch(IList<long?> conceptIds = default(IList<long?>), System.DateTime? endTime = default(System.DateTime?), string id = default(string), string message = default(string), double? secondsDuration = default(double?), System.DateTime? startTime = default(System.DateTime?), string status = default(string))
        {
            ConceptIds = conceptIds;
            EndTime = endTime;
            Id = id;
            Message = message;
            SecondsDuration = secondsDuration;
            StartTime = startTime;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "conceptIds")]
        public IList<long?> ConceptIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTime? EndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "secondsDuration")]
        public double? SecondsDuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTime? StartTime { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'RUNNING', 'COMPLETED',
        /// 'FAILED'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

    }
}
