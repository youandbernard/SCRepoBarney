// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SnomedApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ReferenceSetMember
    {
        /// <summary>
        /// Initializes a new instance of the ReferenceSetMember class.
        /// </summary>
        public ReferenceSetMember()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReferenceSetMember class.
        /// </summary>
        public ReferenceSetMember(bool? active = default(bool?), IDictionary<string, string> additionalFields = default(IDictionary<string, string>), string conceptId = default(string), string effectiveTime = default(string), int? effectiveTimeI = default(int?), System.DateTime? end = default(System.DateTime?), string internalId = default(string), string memberId = default(string), string moduleId = default(string), string path = default(string), ConceptMini referencedComponent = default(ConceptMini), string referencedComponentId = default(string), string refsetId = default(string), string releaseHash = default(string), bool? released = default(bool?), int? releasedEffectiveTime = default(int?), System.DateTime? start = default(System.DateTime?))
        {
            Active = active;
            AdditionalFields = additionalFields;
            ConceptId = conceptId;
            EffectiveTime = effectiveTime;
            EffectiveTimeI = effectiveTimeI;
            End = end;
            InternalId = internalId;
            MemberId = memberId;
            ModuleId = moduleId;
            Path = path;
            ReferencedComponent = referencedComponent;
            ReferencedComponentId = referencedComponentId;
            RefsetId = refsetId;
            ReleaseHash = releaseHash;
            Released = released;
            ReleasedEffectiveTime = releasedEffectiveTime;
            Start = start;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "additionalFields")]
        public IDictionary<string, string> AdditionalFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "conceptId")]
        public string ConceptId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "effectiveTime")]
        public string EffectiveTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "effectiveTimeI")]
        public int? EffectiveTimeI { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public System.DateTime? End { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "internalId")]
        public string InternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "memberId")]
        public string MemberId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "moduleId")]
        public string ModuleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "referencedComponent")]
        public ConceptMini ReferencedComponent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "referencedComponentId")]
        public string ReferencedComponentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "refsetId")]
        public string RefsetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "releaseHash")]
        public string ReleaseHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "released")]
        public bool? Released { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "releasedEffectiveTime")]
        public int? ReleasedEffectiveTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public System.DateTime? Start { get; set; }

    }
}
