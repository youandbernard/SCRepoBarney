// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SnomedApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class BranchPojo
    {
        /// <summary>
        /// Initializes a new instance of the BranchPojo class.
        /// </summary>
        public BranchPojo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BranchPojo class.
        /// </summary>
        /// <param name="state">Possible values include: 'UP_TO_DATE',
        /// 'FORWARD', 'BEHIND', 'DIVERGED'</param>
        public BranchPojo(System.DateTime? baseProperty = default(System.DateTime?), long? baseTimestamp = default(long?), bool? containsContent = default(bool?), System.DateTime? creation = default(System.DateTime?), long? creationTimestamp = default(long?), System.DateTime? head = default(System.DateTime?), long? headTimestamp = default(long?), bool? locked = default(bool?), object metadata = default(object), string path = default(string), string state = default(string), IDictionary<string, int?> versionsReplacedCounts = default(IDictionary<string, int?>))
        {
            BaseProperty = baseProperty;
            BaseTimestamp = baseTimestamp;
            ContainsContent = containsContent;
            Creation = creation;
            CreationTimestamp = creationTimestamp;
            Head = head;
            HeadTimestamp = headTimestamp;
            Locked = locked;
            Metadata = metadata;
            Path = path;
            State = state;
            VersionsReplacedCounts = versionsReplacedCounts;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "base")]
        public System.DateTime? BaseProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "baseTimestamp")]
        public long? BaseTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "containsContent")]
        public bool? ContainsContent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creation")]
        public System.DateTime? Creation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creationTimestamp")]
        public long? CreationTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "head")]
        public System.DateTime? Head { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "headTimestamp")]
        public long? HeadTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locked")]
        public bool? Locked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public object Metadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'UP_TO_DATE', 'FORWARD',
        /// 'BEHIND', 'DIVERGED'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionsReplacedCounts")]
        public IDictionary<string, int?> VersionsReplacedCounts { get; set; }

    }
}
