// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SnomedApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AuthoringStatsSummary
    {
        /// <summary>
        /// Initializes a new instance of the AuthoringStatsSummary class.
        /// </summary>
        public AuthoringStatsSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AuthoringStatsSummary class.
        /// </summary>
        public AuthoringStatsSummary(long? changedFsnCount = default(long?), System.DateTime? executionTime = default(System.DateTime?), long? inactivatedConceptsCount = default(long?), long? inactivatedSynonymsCount = default(long?), long? newConceptsCount = default(long?), long? newSynonymsForExistingConceptsCount = default(long?), long? reactivatedConceptsCount = default(long?), long? reactivatedSynonymsCount = default(long?), string title = default(string))
        {
            ChangedFsnCount = changedFsnCount;
            ExecutionTime = executionTime;
            InactivatedConceptsCount = inactivatedConceptsCount;
            InactivatedSynonymsCount = inactivatedSynonymsCount;
            NewConceptsCount = newConceptsCount;
            NewSynonymsForExistingConceptsCount = newSynonymsForExistingConceptsCount;
            ReactivatedConceptsCount = reactivatedConceptsCount;
            ReactivatedSynonymsCount = reactivatedSynonymsCount;
            Title = title;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "changedFsnCount")]
        public long? ChangedFsnCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executionTime")]
        public System.DateTime? ExecutionTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inactivatedConceptsCount")]
        public long? InactivatedConceptsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "inactivatedSynonymsCount")]
        public long? InactivatedSynonymsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "newConceptsCount")]
        public long? NewConceptsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "newSynonymsForExistingConceptsCount")]
        public long? NewSynonymsForExistingConceptsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reactivatedConceptsCount")]
        public long? ReactivatedConceptsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reactivatedSynonymsCount")]
        public long? ReactivatedSynonymsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

    }
}
