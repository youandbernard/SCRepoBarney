// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SnomedApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Relationship
    {
        /// <summary>
        /// Initializes a new instance of the Relationship class.
        /// </summary>
        public Relationship()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Relationship class.
        /// </summary>
        public Relationship(bool? active = default(bool?), string characteristicType = default(string), string characteristicTypeId = default(string), string destinationId = default(string), string effectiveTime = default(string), int? effectiveTimeI = default(int?), System.DateTime? end = default(System.DateTime?), int? groupId = default(int?), bool? grouped = default(bool?), string id = default(string), string internalId = default(string), string modifier = default(string), string modifierId = default(string), string moduleId = default(string), string path = default(string), int? relationshipGroup = default(int?), string relationshipId = default(string), string releaseHash = default(string), bool? released = default(bool?), int? releasedEffectiveTime = default(int?), ConceptMini source = default(ConceptMini), string sourceId = default(string), System.DateTime? start = default(System.DateTime?), ConceptMini target = default(ConceptMini), ConceptMini type = default(ConceptMini), string typeId = default(string))
        {
            Active = active;
            CharacteristicType = characteristicType;
            CharacteristicTypeId = characteristicTypeId;
            DestinationId = destinationId;
            EffectiveTime = effectiveTime;
            EffectiveTimeI = effectiveTimeI;
            End = end;
            GroupId = groupId;
            Grouped = grouped;
            Id = id;
            InternalId = internalId;
            Modifier = modifier;
            ModifierId = modifierId;
            ModuleId = moduleId;
            Path = path;
            RelationshipGroup = relationshipGroup;
            RelationshipId = relationshipId;
            ReleaseHash = releaseHash;
            Released = released;
            ReleasedEffectiveTime = releasedEffectiveTime;
            Source = source;
            SourceId = sourceId;
            Start = start;
            Target = target;
            Type = type;
            TypeId = typeId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "characteristicType")]
        public string CharacteristicType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "characteristicTypeId")]
        public string CharacteristicTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "destinationId")]
        public string DestinationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "effectiveTime")]
        public string EffectiveTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "effectiveTimeI")]
        public int? EffectiveTimeI { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public System.DateTime? End { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "groupId")]
        public int? GroupId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "grouped")]
        public bool? Grouped { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "internalId")]
        public string InternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifier")]
        public string Modifier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifierId")]
        public string ModifierId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "moduleId")]
        public string ModuleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "relationshipGroup")]
        public int? RelationshipGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "relationshipId")]
        public string RelationshipId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "releaseHash")]
        public string ReleaseHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "released")]
        public bool? Released { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "releasedEffectiveTime")]
        public int? ReleasedEffectiveTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public ConceptMini Source { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceId")]
        public string SourceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public System.DateTime? Start { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public ConceptMini Target { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public ConceptMini Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "typeId")]
        public string TypeId { get; set; }

    }
}
